pico-8 cartridge // http://www.pico-8.com
version 18
__lua__


cx,cy=0,0

function _init()
 init_mouse()
 init_stickers()
 init_sites()
 init_triggers()
end

function _update()

 msx,msy=get_mouse()
 
 if (btnp(❎)) zoomout=not zoomout
 
 if (zoomout) msx/=2 msy/=2
 mwx,mwy=msx+cx,msy+cy
 
 update_triggers()
 
 
 h,v=tilehv(mwx,mwy)
 if h>3 and lmdown() then
  if tilehv_rect(h,v)[3]!=0 then
   place_island(h+1,v+1,h+1)
  end
 end
 
 
 --caches mouse state so do last
 mouse_pan()
end



function draw_game(x,y)

 cls(3)
		 
	camera(x,y)
	--map()
	
	draw_board()
	
	draw_triggers()
	
	--draw_stickers()
	
	--highlight_stickers(mwx,mwy)
	
	hl_tilehv(tilehv(mwx,mwy))

end


function _draw()

 gtime={}

 quadx={-64,64,-64,64}
 quady={-64,-64,64,64}
 
 if zoomout then
 
	 screen_pixels={}
	 qpix={}
	 for q=1,4 do
	  draw_game(cx+quadx[q],cy+quady[q])		 
	  add(gtime,{"d"..q,stat(1)})
	 
	  qpix[q]=read_screen()
	  add(gtime,{"r"..q,stat(1)})
	 end
	 
	 shkpix={}
	 for q=1,4 do
	  shkpix[q]=shrink_pix(qpix[q])
	  add(gtime,{"s"..q,stat(1)})
	 end
	 
	 cls()
	 
	 for q=1,4 do
	  write_quad(shkpix[q],q)
	 end
	 add(gtime,{"w",stat(1)})
 
 else
  draw_game(cx,cy)
 end
 
 camera()
 cursor()
 spr(64,mx,my)
 print2(stat(1))
 
 
	--timing
	if zoomout then
		lastt = 0
		for i=1,#gtime do
		 delta = gtime[i][2]-lastt
		 --delta=flr(delta*100)
		 print(gtime[i][1].." "..delta)
		 lastt = gtime[i][2]
		end
	end
	

end
-->8
--util / mouse


--util


--print text centered on x
function printcenter(s,x,y)
 if type(s) != 'table' then
  s=tostr(s)
 end
 print(s,x-#s*2,y)
end


--drop shadow print
function print2(str,col)
 local cursor_x=peek(0x5f26)
 local cursor_y=peek(0x5f27)
 if (col==nil) col=7
 print(str,cursor_x+1,cursor_y+1,0)
 print(str,cursor_x,cursor_y+1,0)
 print(str,cursor_x,cursor_y,col)
 poke(0x5f27,cursor_y+6)
end


--rects collide
--using x,y,w,h style rects
function rect_col(a,b)
 return a[1]+a[3]>b[1] and
    a[1]<b[1]+b[3] and
    a[2]+a[4]>b[2] and
    a[2]<b[2]+b[4]
end
function rect_col_any(r,rects)
 for check in all(rects) do
  if rect_col(r,check) then
   return true
  end
 end
 return false
end



--inclusive (low<=result<=high)
--remove +1 for low<=result<high
function rnd_bw(low,high)
 return flr(rnd(high-low+1))+low
end


function pinrect(px,py,r)
 return px>=r[1] and px<r[1]+r[3]
    and py>=r[2] and py<r[2]+r[4]
end


function rect2(r,c)
 if r[3]>0 and r[4]>0 then
  rect(r[1],r[2],
       r[1]+r[3]-1,
       r[2]+r[4]-1,c)
 end
end

function rectfill2(x,y,w,h,c)
 rectfill(x,y,x+w-1,y+h-1,c)
end






--mouse

--mouse down coords
mdx=0
mdy=0
mdrag = false

-- middle or even right mouse
-- clicks might be iffy on web?
lmwasdown=false
rmwasdown=false
mmwasdown=false

function init_mouse()
 poke(0x5f2d, 1) --enable mouse
end

function get_mouse()
 return stat(32)-1, stat(33)-1
end

function cache_mouse_state()
 --for mouse edge triggers
 lmwasdown=lmouse()
	rmwasdown=rmouse()
	mmwasdown=mmouse()
end

function nmouse() return stat(34)==0 end
function lmouse() return stat(34)==1 end
function rmouse() return stat(34)==2 end
function mmouse() return stat(34)==4 end

function lmup() return not lmouse() and lmwasdown end
function rmup() return not rmouse() and rmwasdown end
function mmup() return not mmouse() and mmwasdown end

function lmdown() return lmouse() and not lmwasdown end
function rmdown() return rmouse() and not rmwasdown end
function mmdown() return mmouse() and not mmwasdown end

--can delete
function debug_print_mouse()
 print(mx)
 print(my)
 print("lmup"..tostr(lmup()))
 print("lmdown"..tostr(lmdown()))
 print("lmouse"..tostr(lmouse()))
end

--camera pan
function mouse_pan()
 mx,my=get_mouse()
 --mwheel drag
 if mmdown() then
  camdrag=true
  camclickworldx=mx+cx
  camclickworldy=my+cy
 end
 if mmouse() then
  if camdrag then
   cx=camclickworldx-mx
   cy=camclickworldy-my
  end
 end
 if mmup() then
  camdrag=false
 end
-- mx-=cx
-- my-=cy
 cache_mouse_state()
end



-->8
--stickers/popups


function init_stickers()

 if (island_popup==nil) stop()

	island_tile={
	 ["spr"]=60,
	 ["w"]=1,
	 ["h"]=1,
	 ["popup"]=island_popup
	}
	island_portrait={
	 ["spr"]=14,
	 ["w"]=2,
	 ["h"]=3,
	 ["popup"]=island_popup
	}
	
	home={
	 ["spr"]=14,
	 ["w"]=2,
	 ["h"]=2,
	 ["popup"]=home_popup
	}
	
	if(island_tile.popup==nil) stop()
	
	stickers={}
	
	place_sticker(island_tile,24,59)
	place_sticker(island_tile,32,32)
	place_sticker(island_tile,40,83)
	place_sticker(island_tile,48,56)
	
	place_sticker(home,0,3*8)
	place_sticker(home,0,5*8)
	place_sticker(home,0,7*8)
	place_sticker(home,0,9*8)
	place_sticker(home,0,11*8)

end



function place_sticker(s,x,y)
 res={}
 res.x=x
 res.y=y
 res.spr=s.spr
 res.w=s.w
 res.h=s.h
 res.popup=s.popup
 add(stickers,res)
 return res
end




function draw_sticker(s)
 spr(s.spr, s.x,s.y, s.w,s.h)
end
function draw_stickers()
 for s in all(stickers) do
  draw_sticker(s)
 end
end


function highlight_stickers(mx,my)
 for s in all(stickers) do
  if pinrect(mx,my,srect(s)) then
   rect2(srect(s))
   if s.popup!=nil then
    draw_popup(s.popup)
    line(s.x,s.y,64,50)
   end
  end
 end
end

function srect(s)
 return {s.x,s.y,s.w*8,s.h*8}
end




--popup



island_popup={
 ["spr"]=128,
 ["w"]=4,
 ["h"]=6
}

home_popup={
 ["spr"]=132,
 ["w"]=4,
 ["h"]=4
}


function draw_popup(p)

 spr(p.spr,64,50,p.w,p.h)

end



-->8
--tiles


function tilehv(x,y)
 h=flr(x/16)
 if (h%2==1) y+=8
 v=flr(y/16)
 return h,v
end


function tilehv_rect(h,v)
 if h==-1 then
  return {-16,-8,16,16*11}
 end
 if h==-2 or h==-3 then
  v=flr(v/2)
  if v>=0 and v<5 then
   return {-3*16,v*32,32,32}
  end
 end
 if h>=0 and h<=14 then
  if (h%2==1) v-=0.5
  if v>=-0.5 and v<10 then
   return {h*16,v*16,16,16}
  end
 end
 return {0,0,0,0}
end


function hl_tilehv(h,v)
 rect2(tilehv_rect(h,v),14)
end


-->8
--board


province_names={
"brie",
"caspian",
"pheonix",
"neptune",
}



islands={
 --found?, pos, sitemap, tilesprt, xflip, yflip
 {true, 5.5, 1, 9},
 {true, 10,  2, 9, true},
 {true, 2.5, 3, 41, false, true},
 {true, 6,   4, 41},
 //     diff, glory
 {false, 5, 1},
 {false, 6, 1},
 {false, 7, 2},
 {false, 8, 2},
 {false, 9, 3},
 {false, 10, 3},
 {false, 11, 4},
 {false, 12, 5},
 {false, 12, 5},
 {false, 12, 5},
 {false, 30, 0}, --0 glory not drawn
}

function place_island(l,r,sitemap)
 islands[l][1]=true
 
 if (l%2==1) r+=0.5
 islands[l][2]=r
 
 islands[l][3]=sitemap
 
 islands[l][4]=9
 
end

site_symbols={
["anchor"]=17,
["sun"]=33,
["fish"]=49,
["wood"]=5,--2,
["spice"]=9,--18,
["linen"]=6,--34,
["iron"]=1,--50,
[""]=18
}

islandsites={
 --1
 {{"wood",  0,0, 2,true},
 {"sun",    0,0, 3},
 {"fish",   0,0, 4},
 {"anchor", 0,0, 5,true},
 {"anchor", 0,0, 6,true},},
 --2
 {{"spice", 0,0, 2,true},
 {"sun",    0,0, 3},
 {"sun",    0,0, 3},
 {"sun",    0,0, 3},
 {"anchor", 0,0, 5,true},
 {"anchor", 0,0, 6,true},},
 --3
 {{"linen", 0,0, 3,true},
 {"sun",    0,0, 3},
 {"sun",    0,0, 3},
 {"fish",   0,0, 4},
 {"anchor", 0,0, 5,true},
 {"anchor", 0,0, 6,true},},
 --4
 {{"iron",  0,0, 2},
 {"sun",    0,0, 3},
 {"sun",    0,0, 3,true},
 {"fish",   0,0, 4},
 {"anchor", 0,0, 5,true},
 {"anchor", 0,0, 6,true},},
}

minx,miny=2,8
maxx,maxy=25,25
topw,toph=7,7
botw,both=5,6
botx,boty=1,7


function init_sites()
 for l=1,15 do
	 if islandsites[l]==nil then
	  islandsites[l]={}
	  islandcount=6
	 else
	  sitecount=#islandsites[l]
	 end
	 
		::giveup::
		used_rects={}
		for i=1,sitecount do
		 if islandsites[l][i]==nil then
		  islandsites[l][i]={}
		 end
		
		 count=0
		 ::retry::
		 rndx=rnd_bw(minx,maxx)
		 rndy=rnd_bw(miny,maxy)
		 r1={rndx,rndy,topw,toph}
		 r2={rndx+botx,rndy+boty,botw,both}
		 
		 if rect_col_any(r1,used_rects) 
		 or rect_col_any(r2,used_rects) 
		 then
		  count+=1
		  if count>200 then
		   goto giveup
		  end
		  goto retry
		 end
		 
		 --::giveup::
		 
		 add(used_rects,r1)
		 add(used_rects,r2)
		 islandsites[l][i][2]=rndx
		 islandsites[l][i][3]=rndy
	 end
	end
end


function draw_site(site,x,y)
 symb=site[1]
 x=x+site[2]
 y=y+site[3]
 val=site[4]
 danger=site[5]
 
 if site_symbols[symb]==nil
 or site_symbols[symb]<16 then
  c=site_symbols[symb]
  rectfill2(x-1,y-1,7,7,c)
 else
  rectfill2(x-1,y-1,7,7,14)
  spr(site_symbols[symb],x,y)
 end
 c=1
 if (danger) c=2
 rectfill2(x,y+6,5,6,c)
 print(val,x+1,y+6,6)
end
function draw_sites(l,x,y)
 local sites=islandsites[l]
 for i=1,#sites do
  draw_site(sites[i],x,y)
 end
end


--get x,y for island closeup
function closeuplocation(i)
 if i%2==1 then
  --top
  return 16*(i-1)-8,-8*7
 else
  --bottom
  return 16*(i-2)+8,10*16+8
 end
end
 
function draw_board()

 --home ports
 for y=0,4 do
  local bx,by=-32-16,y*32
  spr(5,bx,by,4,4)
  rectfill(bx+1,by+1,bx+29,by+7,7)
  if province_names[y+1]!=nil then
   print(province_names[y+1],
         bx+2,by+2,0)
  end
  
  --shipyard
  spr(48,bx+2,by+10)
  spr(32,bx+2,by+10)
  
  --repair
  spr(16,bx+2,by+20)
  
 end
 

 --coastal waters 
 for y=0,21 do
  spr(3,-16,y*8-8,2,1)
 end

 --open sea
 for x=0,14 do
  for y=0,9 do
   spry=y*16
   if (x%2==1) spry-=8
    
   spr(3,x*16,spry,2,2)
   
   if x%2==1 and y==9 then
    spr(3,x*16,spry+16,2,2)
   end
   
  end
 end
 
 
 --arch
 spr(35, 4*16, 4*16, 2,2)
 
 
 --draw islands
 for i=1,15 do
	 local x,y=closeuplocation(i)
  if islands[i][1] then
  
   --closeup card
	  spr(128, x,y, 4,6)
	  draw_sites(islands[i][3],x,y)
	  
	  --dashed lines
		 palt(3,true)
		 palt(0,false)
		 if i%2==1 then
		  top,bot=0,islands[i][2]*2-3
		 else
 		 top,bot=islands[i][2]*2,21
		 end
		 for j=top,bot do 
		  spr(1, x+12,8*j-8) 
		 end
		 palt(3,false)
		 palt(0,true)
		 
		 --island tile
		 local isprt=islands[i][4]
		 local ix=(i-1)*16
		 local iy=(islands[i][2]-1)*16-8
   spr(islands[i][4],ix,iy,2,2,
    islands[i][5],islands[i][6])

  else
	  spr(132, x,y, 4,6)
	  printcenter(islands[i][2],x+16,y+13)
	  if islands[i][3]!=0 then
 	  print(islands[i][3],x+14,y+29)
 	 else
 	  rectfill2(x+11,y+27,9,7,13)
 	 end
  end
 end
 

end
-->8
--triggers



function uncover(l)
 place_island(5,4,5)
end


function init_triggers()
	triggers={
	--x,y,w,h,function,func arg
	 {0,0,5,5,uncover,1},
	}
end


function update_triggers()

 if lmouse() then
  for trig in all(triggers) do
   if pinrect(mwx,mwy,trig) then
    trig[5](trig[6])
   end
  end
 end
 
end


function draw_triggers()
 for trig in all(triggers) do
  if pinrect(mwx,mwy,trig) then
   c=10
  else
   c=8
  end
  rect2(trig,c)
 end
end

-->8
--omg what



function shrink_screen_to_tl()
 
 local addr=0x6000
 local i32s={}
 
 --unfortunately, this method
 --of just ignoring 3/4 of all
 --pixels just doesn't work great
 --better would be to average
 --all 4 somehow to get 1
 
 --to compress in y is easy,
 --just skip ever other row
 --when reading and writing
 --to compress in x is harder
 --(but faster) since we can
 --read 4 bytes at a time
 
 local i=0
 for y=0,127,2 do --read every other
  for x=0,15 do
		 i32s[i]=peek4(addr+x*4+y*64)
		 i+=1
	 end
 end
 
 res={}
 j=0
 for i=0,#i32s-1,2 do
  
  --eg with 1byte peek/poke
--  a=band(i32s[i+1],0xf0)
--  b=shr(band(i32s[i],0xf0),4)
--  res[j]=bor(a,b)
--  j+=1

  --0x a b. c d  1st i32
  --0x e f. g h  2nd i32
  --0xefgh.abcd  result

  a=shr(band(i32s[i],0x0f00.0000),3*4)
  b=shr(band(i32s[i],0x000f.0000),2*4)
  c=shr(band(i32s[i],0x0000.0f00),1*4)
  d=shr(band(i32s[i],0x0000.000f),0*4)
  
  e=shl(band(i32s[i+1],0x0f00.0000),1*4)
  f=shl(band(i32s[i+1],0x000f.0000),2*4)
  g=shl(band(i32s[i+1],0x0000.0f00),3*4)
  h=shl(band(i32s[i+1],0x0000.000f),4*4)
  
  res[j]=bor(bor(bor(bor(bor(bor(bor(a,b),c),d),e),f),g),h)
  j+=1
 end
 i32s=res
 
 cls()
 
 local i=0
	for y=0,127,2 do
  for x=0,7 do
		 poke4(addr+x*4+y*32,res[i])
		 i+=1
	 end
 end


end








function read_screen()
 
 local addr=0x6000
 local i32s={}
 
 --unfortunately, this method
 --of just ignoring 3/4 of all
 --pixels just doesn't work great
 --better would be to average
 --all 4 somehow to get 1
 
 --to compress in y is easy,
 --just skip ever other row
 --when reading and writing
 --to compress in x is harder
 --(but faster) since we can
 --read 4 bytes at a time
 
 local i=0
 for y=0,127,2 do --read every other
  for x=0,15 do
		 i32s[i]=peek4(addr+x*4+y*64)
		 i+=1
	 end
 end
 
 return i32s
end


function shrink_pix(pix)
 res={}
 j=0
 for i=0,#pix-1,2 do
  
  --eg with 1byte peek/poke
--  a=band(i32s[i+1],0xf0)
--  b=shr(band(i32s[i],0xf0),4)
--  res[j]=bor(a,b)
--  j+=1

  --0x a b. c d  1st i32
  --0x e f. g h  2nd i32
  --0xefgh.abcd  result

  a=shr(band(pix[i],0x0f00.0000),3*4)
  b=shr(band(pix[i],0x000f.0000),2*4)
  c=shr(band(pix[i],0x0000.0f00),1*4)
  d=shr(band(pix[i],0x0000.000f),0*4)
  
  e=shl(band(pix[i+1],0x0f00.0000),1*4)
  f=shl(band(pix[i+1],0x000f.0000),2*4)
  g=shl(band(pix[i+1],0x0000.0f00),3*4)
  h=shl(band(pix[i+1],0x0000.000f),4*4)
  
  res[j]=bor(bor(bor(bor(bor(bor(bor(a,b),c),d),e),f),g),h)
  j+=1
 end
 return res
 
end


destx={0,32,0,32}
desty={0,0,64,64}
function write_quad(res,q)
 bx,by=destx[q],desty[q]
 local i=0
	for y=0,127,2 do
  for x=0,7 do
		 poke4(0x6000+x*4+y*32+
		  bx+by*63,
		  res[i])
		 i+=1
	 end
 end
end
__gfx__
0000000033303333000000001111111111111112ddddddddddddddd6661111111111111200000000000000000000000000000000000000000000000000000000
0000000033303333000000001111111111111112ddddddddddddddd6661111111111111200000666660000000000000000000000000000000000000000000000
0070070033303333000000001111111111111112dddddddddddddd666111111111111112000666ddd66600000000000000000000000000000000000000000000
0007700033333333000000001111111111111112ddddddddddddd66661111111111111120066ddddddd660000000000000000000000000000000000000000000
0007700033303333000000001111111111111112ddddddddddddd6661111111111111112006ddddddddd66000000000000000000000000000000000000000000
0070070033303333000000001111111111111112ddddddddddddd6661111111111111112006dddddddddd6000000000000000000000000000000000000000000
0000000033303333000000001111111111111112dddddddddddddd666111111111111112066dddddddddd6000000000000000000000000000000000000000000
0000000033333333000000001111111111111112dddddddddddddd66611111111111111206dddddddddd66000000000000000000000000000000000000000000
0066660000100000000000001111111111111112ddddddddddddd666611111111111111206dddddddddd60000000000000000000000000000000000000000000
0666666001110000011000001111111111111112dddddddddddd6661111111111111111206dddddddddd60000000000000000000000000000000000000000000
6665556600100000011000001111111111111112dddddddddddd66611111111111111112066ddddddddd66000000000000000000000000000000000000000000
6666555610101000000000001111111111111112dddddddddddd66661111111111111112006666dddddd66000000000000000000000000000000000000000000
6665655601110000000000001111111111111112ddddddddddddd66611111111111111120000666666dd66000000000000000000000000000000000000000000
6656666600000000000000001111111111111112ddddddddddddd666111111111111111200000000066660000000000000000000000000000000000000000000
0666666000000000000000001111111111111112dddddddddddd6666111111111111111200000000000000000000000000000000000000000000000000000000
0066660000000000000000002222222222222222dddddddddddd6666111111111111111200000000000000000000000000000000000000000000000000000000
0000700010101000000000000000000000000000ddddddddddddd666111111111111111200000000000000000000000000000000000000000000000000000000
0007770001110000000000000000000000000000dddddddddddddd66111111111111111200000006666000000000000000000000000000000000000000000000
0007770011111000000000000000000000000000dddddddddddd6666111111111111111200000006dd6660000000000000000000000000000000000000000000
0077777001110000000000000000005555500000dddddddddddd66611111111111111112000000066ddd60000000000000000000000000000000000000000000
0077777010101000000000000000005ddddd0000dddddddddddd6611111111111111111200666600066d66000000000000000000000000000000000000000000
070070000000000000000000000005dd0ddd0000dddddddddddd66111111111111111112006dd6000066d6000000000000000000000000000000000000000000
07777770000000000000000000005ddd00ddd000dddddddddddd66111111111111111112006d6600000666000000000000000000000000000000000000000000
00000000000000000000000000005dd000ddd000dddddddddddd6666111111111111111200666000000000000000000000000000000000000000000000000000
9999111100000000000000000000dd00000dd000ddddddddddddd666611111111111111200000000000000000000000000000000000000000000000000000000
9999111101101000000000000006dd0cc0ddd050dddddddddddddd66661111111111111206666000000006000000000000000000000000000000000000000000
9999111111110000000000006dd6dd6cc6dd60d6dddddddddddddd66661111111111111206dd6600000066000000000000000000000000000000000000000000
9999111101001000000000006dd6666666666666dddddddddddddd66661111111111111206ddd600000000000000000000000000000000000000000000000000
55556666001000000000000066666dd0ddd66000dddddddddddddd661111111111111112066dd660066600000000000000000000000000000000000000000000
55556666000000000000000000006dd06ddd6000dddddddddddddd6661111111111111120066dd60666600000000000000000000000000000000000000000000
5555666600000000000000000000666066666000dddddddddddddd66611111111111111200066660000000000000000000000000000000000000000000000000
55556666000000000000000000000000000000002222222222222222222222222222222200000000000000000000000000000000000000000000000000000000
70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
19100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
19910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
19991000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
19911000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666666666666666666666666666660000000000000000000000000000000000000000000000000000000000000000
677777777777777777777777777777766dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
677777777777777777777777777777766dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
677777777777777777777777777777766dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
677777777777777777777777777777766dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
677777777777777777777777777777766dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
677777777777777777777777777777766dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
611111111111111111111111111111166dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccccccccccccccccccccccc66ddddddddddd2222222dddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccccccc666666ccccccccccccc66dddddd22222222222222222ddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccccccc6ddddd66ccccccccccc66dddddd22222222222222222ddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccc6dddddddd66ccccccccc66dddddd22222222222222222ddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccc6ddddddddd666ccccccc66dddddd22222222222222222ddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccc6ddddddddddd666ccccc66dddddd22222222222222222ddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccc6ddddddddddddd6ccccc66dddddd22222222222222222ddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccccc66ddddddddddddd66cccc66ddddddd222222222222222dddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccc66dddddd5dddddddd6cccc66ddddddd222222222222222dddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccc66dddddd455ddddddd6cccc66ddddddd222222222222222dddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccc66dddddd44455dddddd6cccc66dddddddd2222222222222ddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccc6dddddd4444555ddddd6cccc66dddddddd2222222222222ddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccc6dddddddd45555ddddd6ccccc66ddddddddd22222222222dddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccc66dddddddddddddddddd6ccccc66dddddddddd222222222ddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccc6ddddddddddddddddddd6ccccc66ddddddddddd2222222dddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccc6dddddddddddddddddddd6ccccc66dddddddddddd22222ddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccc6dddddd3333dddddddddd6ccccc66dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccc6ddd33333333333ddddd66cccc66dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccc6ddd333333333333ddddd6cccc66dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccc66dd533333553333ddddd6cccc66ddddddddddaadadadaaddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccc6ddd55333333333ddddd6cccc66dddddddddddaaaaaaadddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccc6dddd553355355ddddd6cccc66ddddddddddd1111111dddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccc66ddddd55dd5dddddd66cccc66ddddddddddd1111111dddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccc66dddddddddddddd66ccccc66ddddddddddd1111111dddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccc6ddddddd66666666cccccc66ddddddddddd1111111dddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccccc66dddd66ccccccccccccc66dddddddddddd11111ddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6ccccccccccc66666cccccccccccccc66dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccccccccccccccccccccccc66dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
6cccccccccccccccccccccccccccccc66dddddddddddddddddddddddddddddd60000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666666666666666666666666666660000000000000000000000000000000000000000000000000000000000000000
67777777777777776dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
67777777777777776dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
67777777777777776dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
67777777777777776dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666666666666666666666666666660000000000000000000000000000000000000000000000000000000000000000
6ddddddddddddddd6dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
6ddddddddddddddd6dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
6ddddddddddddddd6dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
6ddddddddddddddd6dddd6dddd6dddd66ddddddddddddddd6dddd6dddd6dddd60000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666666666666666666666666666660000000000000000000000000000000000000000000000000000000000000000
__map__
0000070809080a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000171819181a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000272829282a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304200102010201020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304101102110211020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314302112211221120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000070809080a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000171819181a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000272829282a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
